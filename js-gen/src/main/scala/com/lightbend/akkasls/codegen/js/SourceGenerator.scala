/*
 * Copyright (c) Lightbend Inc. 2021
 *
 */

package com.lightbend.akkasls.codegen
package js

import org.bitbucket.inkytonik.kiama.output.PrettyPrinter

import java.nio.file.Path

/**
  * Responsible for generating JavaScript source from an entity model
  */
object SourceGenerator extends PrettyPrinter {

  /**
    * Generate JavaScript source from entities where the target source and test source directories have no existing source.
    * Note that we only generate tests for entities where we are successful in generating an entity. The user may
    * not want a test otherwise.
    *
    * Also generates a main source file if it does not already exist.
    *
    * Impure.
    *
    * @param entities        The model of entity metadata to generate source file
    * @param sourceDirectory A directory to generate source files in, which can also containing existing source.
    * @param testSourceDirectory A directory to generate test source files in, which can also containing existing source.
    * @param mainFilename  The name of the main file e.g. index.js
    * @return A collection of paths addressing source files generated by this function
    */
  def generate(
      entities: Iterable[ModelBuilder.Entity],
      sourceDirectory: Path,
      testSourceDirectory: Path,
      mainFilename: String
  ): Iterable[Path] = List.empty

}
